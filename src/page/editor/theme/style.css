.milkdown-theme-rin blockquote {
    @apply not-italic font-serif border-l-4 pl-4 border-indigo-300 bg-white py-[1px];
  }
  
  .milkdown-theme-rin code {
    /* text-nord10  */
    @apply font-mono font-normal;
  }
  
  .milkdown-theme-rin pre code {
    @apply text-inherit;
  }
  
  .milkdown-theme-rin img {
    @apply max-w-full !my-0 inline-block;
  }
  
  .milkdown-theme-rin.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
    @apply font-normal;
  }
  
  .milkdown-theme-rin.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker,
  .milkdown-theme-rin.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
    /* @apply text-nord10; */
  }
  
  
  .milkdown-theme-rin.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before,
  .milkdown-theme-rin.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::after {
    content: '';
  }
  
  .milkdown-theme-rin.prose :where(code):not(:where([class~="not-prose"] *))::before,
  .milkdown-theme-rin.prose :where(code):not(:where([class~="not-prose"] *))::after {
    content: '';
  }
  
  .milkdown-theme-rin.prose .tableWrapper {
    @apply mb-2 overflow-x-auto relative;
  }
  
  .milkdown-theme-rin.prose table {
    @apply text-sm shadow-md sm:rounded-lg !overflow-visible !m-4;
  }
  
  .milkdown-theme-rin.prose td,
  .milkdown-theme-rin.prose th {
    @apply !py-3 !px-6;
  }
  
  .milkdown-theme-rin.prose tr {
    @apply border-b border-gray-200 dark:border-gray-600;
  }
  
  .milkdown-theme-rin.prose :where(td, th) p {
    @apply !m-0;
  }
  
  .milkdown-theme-rin.prose :where(td, th):nth-child(odd) {
    @apply bg-gray-50 dark:bg-gray-900;
  }
  
  .milkdown-theme-rin.prose.ProseMirror .selectedCell:after {
    /* @apply bg-nord8/30; */
  }
  
  /* A little workaround to turn the element into a space */
  .milkdown-theme-rin.prose br[data-is-inline="true"],
  .milkdown-theme-rin.prose br[data-is-inline="true"]::after {
    content: ' '
  }